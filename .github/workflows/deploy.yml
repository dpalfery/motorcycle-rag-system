name: Build & Deploy to Azure

on:
  push:
    branches: ["main", "develop"]
  workflow_dispatch:

# Global env vars (non-secret)
env:
  DOTNET_VERSION: "9.0.x"
  PULUMI_STACK: "dev"
  PULUMI_WORK_DIR: "infrastructure"

# Add permissions for OIDC token
permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    env:
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore & Build
        run: |
          dotnet restore
          dotnet build -c Release --no-restore

      - name: Run Unit Tests
        run: dotnet test -c Release --no-build --verbosity normal

      # Publish the .NET application
      - name: Publish .NET App
        run: dotnet publish src/MotorcycleRAG.API/MotorcycleRAG.API.csproj -c Release -o ./publish

      # Login to Azure using service principal authentication
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        env:
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Initialize Pulumi Stack
        uses: pulumi/actions@v4
        with:
          command: stack init
          stack-name: ${{ env.PULUMI_STACK }}
          work-dir: ${{ env.PULUMI_WORK_DIR }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        continue-on-error: true  # Stack might already exist

      - name: Pulumi Preview
        uses: pulumi/actions@v4
        with:
          command: preview
          stack-name: ${{ env.PULUMI_STACK }}
          work-dir: ${{ env.PULUMI_WORK_DIR }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # pass-through Pulumi config values sourced from repo secrets
          PULUMI_CONFIG_PASSPHRASE: ""
          # Pulumi Config (endpoints and keys are now generated by Pulumi)
          # Only location configuration needed
          PULUMI_CONFIG_LOCATION: "eastus"
          # Path to published app for deployment
          PULUMI_CONFIG_PUBLISHPATH: "./publish"

      - name: Pulumi Up (Deploy)
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: ${{ env.PULUMI_STACK }}
          work-dir: ${{ env.PULUMI_WORK_DIR }}
          refresh: true
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          PULUMI_CONFIG_PASSPHRASE: ""
          # Pulumi Config (endpoints and keys are now generated by Pulumi)
          # Only location configuration needed
          PULUMI_CONFIG_LOCATION: "eastus"
          # Path to published app for deployment
          PULUMI_CONFIG_PUBLISHPATH: "./publish"
